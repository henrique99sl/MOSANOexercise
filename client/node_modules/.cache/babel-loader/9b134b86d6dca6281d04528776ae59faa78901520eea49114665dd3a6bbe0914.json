{"ast":null,"code":"var _jsxFileName = \"/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/context/UsersContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersContext = /*#__PURE__*/createContext();\n\n// Função delay para garantir spinner mínimo\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nexport const UsersProvider = ({\n  children\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  // Buscar todos os usuários do backend com delay mínimo para spinner\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const [res] = await Promise.all([axios.get(\"http://localhost:4000/api/users\"), delay(800) // spinner no mínimo 800ms\n      ]);\n      setUsers(res.data);\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to fetch users:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Buscar users quando o componente monta\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Adicionar usuário e atualizar lista sem bloquear retorno\n  const addUser = async userData => {\n    setSaving(true);\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/users\", userData);\n      // Atualiza lista assincronamente sem await\n      fetchUsers();\n      return res.data;\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to add user:\", err);\n      return null;\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Apagar usuário e atualizar lista assincronamente\n  const deleteUser = async id => {\n    try {\n      await axios.delete(`http://localhost:4000/api/users/${id}`);\n      fetchUsers();\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to delete user:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: {\n      users,\n      loading,\n      saving,\n      addUser,\n      deleteUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook para consumir o contexto\n_s(UsersProvider, \"U4rOx51GnijOTg4EtsKMYCjvfmM=\");\n_c = UsersProvider;\nexport const useUsers = () => {\n  _s2();\n  return useContext(UsersContext);\n};\n_s2(useUsers, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","UsersContext","delay","ms","Promise","res","setTimeout","UsersProvider","children","_s","users","setUsers","loading","setLoading","saving","setSaving","fetchUsers","all","get","data","err","console","error","addUser","userData","post","deleteUser","id","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUsers","_s2","$RefreshReg$"],"sources":["/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/context/UsersContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst UsersContext = createContext();\n\n// Função delay para garantir spinner mínimo\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n\nexport const UsersProvider = ({ children }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  // Buscar todos os usuários do backend com delay mínimo para spinner\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const [res] = await Promise.all([\n        axios.get(\"http://localhost:4000/api/users\"),\n        delay(800), // spinner no mínimo 800ms\n      ]);\n      setUsers(res.data);\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to fetch users:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Buscar users quando o componente monta\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Adicionar usuário e atualizar lista sem bloquear retorno\n  const addUser = async (userData) => {\n    setSaving(true);\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/users\", userData);\n      // Atualiza lista assincronamente sem await\n      fetchUsers();\n      return res.data;\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to add user:\", err);\n      return null;\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Apagar usuário e atualizar lista assincronamente\n  const deleteUser = async (id) => {\n    try {\n      await axios.delete(`http://localhost:4000/api/users/${id}`);\n      fetchUsers();\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to delete user:\", err);\n    }\n  };\n\n  return (\n    <UsersContext.Provider value={{ users, loading, saving, addUser, deleteUser }}>\n      {children}\n    </UsersContext.Provider>\n  );\n};\n\n// Hook para consumir o contexto\nexport const useUsers = () => useContext(UsersContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}