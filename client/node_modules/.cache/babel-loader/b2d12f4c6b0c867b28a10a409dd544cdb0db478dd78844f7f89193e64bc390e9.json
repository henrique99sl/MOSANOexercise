{"ast":null,"code":"// adicionar (com spinner)\nconst addUser=async userData=>{setLoading(true);try{const res=await axios.post(\"http://localhost:4000/api/users\",userData);setUsers(prev=>[...prev,res.data]);}catch(err){console.error(err);}finally{setLoading(false);}};// apagar (sem spinner)\nconst deleteUser=async id=>{try{await axios.delete(\"http://localhost:4000/api/users/\".concat(id));setUsers(prev=>prev.filter(u=>u._id!==id));}catch(err){console.error(err);}};","map":{"version":3,"names":["addUser","userData","setLoading","res","axios","post","setUsers","prev","data","err","console","error","deleteUser","id","delete","concat","filter","u","_id"],"sources":["/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/hooks/useUsers.js"],"sourcesContent":["// adicionar (com spinner)\nconst addUser = async (userData) => {\n    setLoading(true);\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/users\", userData);\n      setUsers((prev) => [...prev, res.data]);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // apagar (sem spinner)\n  const deleteUser = async (id) => {\n    try {\n      await axios.delete(`http://localhost:4000/api/users/${id}`);\n      setUsers((prev) => prev.filter((u) => u._id !== id));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  "],"mappings":"AAAA;AACA,KAAM,CAAAA,OAAO,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAChCC,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAACC,IAAI,CAAC,iCAAiC,CAAEJ,QAAQ,CAAC,CACzEK,QAAQ,CAAEC,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAEJ,GAAG,CAACK,IAAI,CAAC,CAAC,CACzC,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CAAC,OAAS,CACRP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAU,UAAU,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC/B,GAAI,CACF,KAAM,CAAAT,KAAK,CAACU,MAAM,oCAAAC,MAAA,CAAoCF,EAAE,CAAE,CAAC,CAC3DP,QAAQ,CAAEC,IAAI,EAAKA,IAAI,CAACS,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACC,GAAG,GAAKL,EAAE,CAAC,CAAC,CACtD,CAAE,MAAOJ,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}