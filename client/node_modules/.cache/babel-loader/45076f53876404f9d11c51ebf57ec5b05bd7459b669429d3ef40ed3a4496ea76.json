{"ast":null,"code":"var _jsxFileName = \"/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useUsers } from \"../context/UsersContext\";\nimport UserForm from \"../components/UserForm\";\nimport UserTable from \"../components/UserTable\";\nimport Spinner from \"../components/Spinner\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    users,\n    loading,\n    saving,\n    addUser,\n    deleteUser\n  } = useUsers();\n  const [lastAdded, setLastAdded] = useState(null);\n\n  // Apenas notifica para refazer a lista (sem passar dados que causam duplicação)\n  const handleAddUser = async () => {\n    await addUser(); // só recarrega a lista\n    setLastAdded(users[users.length - 1] || null); // atualiza último adicionado com o último da lista atual\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t(\"home\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), lastAdded && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: t(\"greeting_full\", {\n        name: lastAdded.name,\n        surname: lastAdded.surname,\n        country: lastAdded.country,\n        date: new Date(lastAdded.birthday).toLocaleDateString()\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"2rem\",\n        marginTop: \"1rem\",\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: \"300px\"\n        },\n        children: saving ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(UserForm, {\n          onUserAdded: handleAddUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 2,\n          minWidth: \"300px\"\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(UserTable, {\n          users: users,\n          onDelete: deleteUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"wdPMkLJI275Mhgh0DDhvKs4/C0A=\", false, function () {\n  return [useTranslation, useUsers];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useUsers","UserForm","UserTable","Spinner","useTranslation","jsxDEV","_jsxDEV","Home","_s","t","users","loading","saving","addUser","deleteUser","lastAdded","setLastAdded","handleAddUser","length","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","name","surname","country","date","Date","birthday","toLocaleDateString","display","gap","marginTop","flexWrap","flex","minWidth","onUserAdded","onDelete","_c","$RefreshReg$"],"sources":["/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/pages/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useUsers } from \"../context/UsersContext\";\nimport UserForm from \"../components/UserForm\";\nimport UserTable from \"../components/UserTable\";\nimport Spinner from \"../components/Spinner\";\nimport { useTranslation } from \"react-i18next\";\n\n\n\nexport default function Home() {\n  const { t } = useTranslation();\n  const { users, loading, saving, addUser, deleteUser } = useUsers();\n  const [lastAdded, setLastAdded] = useState(null);\n\n  // Apenas notifica para refazer a lista (sem passar dados que causam duplicação)\n  const handleAddUser = async () => {\n    await addUser(); // só recarrega a lista\n    setLastAdded(users[users.length - 1] || null); // atualiza último adicionado com o último da lista atual\n  };\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <h2>{t(\"home\")}</h2>\n      {lastAdded && (\n        <h3>\n          {t(\"greeting_full\", {\n            name: lastAdded.name,\n            surname: lastAdded.surname,\n            country: lastAdded.country,\n            date: new Date(lastAdded.birthday).toLocaleDateString(),\n          })}\n        </h3>\n      )}\n      <div style={{ display: \"flex\", gap: \"2rem\", marginTop: \"1rem\", flexWrap: \"wrap\" }}>\n        <div style={{ flex: 1, minWidth: \"300px\" }}>\n          {saving ? <Spinner /> : <UserForm onUserAdded={handleAddUser} />}\n        </div>\n        <div style={{ flex: 2, minWidth: \"300px\" }}>\n          {loading ? <Spinner /> : <UserTable users={users} onDelete={deleteUser} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}