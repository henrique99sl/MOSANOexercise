{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n\n  // basic validation\n  if (!country.name || !country.code) {\n    alert(\"Please fill in name and code.\");\n    return;\n  }\n  try {\n    await axios.post(\"http://localhost:4000/api/countries\", {\n      name: country.name,\n      code: country.code\n    });\n    setCountry({\n      name: \"\",\n      code: \"\"\n    });\n    refetch(); // ou um método para atualizar a lista\n  } catch (err) {\n    console.error(err);\n    alert(\"Error saving country.\");\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","country","name","code","alert","axios","post","setCountry","refetch","err","console","error"],"sources":["/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/components/CountryForm.js"],"sourcesContent":["const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    // basic validation\n    if (!country.name || !country.code) {\n      alert(\"Please fill in name and code.\");\n      return;\n    }\n  \n    try {\n      await axios.post(\"http://localhost:4000/api/countries\", {\n        name: country.name,\n        code: country.code\n      });\n      setCountry({ name: \"\", code: \"\" });\n      refetch(); // ou um método para atualizar a lista\n    } catch (err) {\n      console.error(err);\n      alert(\"Error saving country.\");\n    }\n  };\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI,CAACC,OAAO,CAACC,IAAI,IAAI,CAACD,OAAO,CAACE,IAAI,EAAE;IAClCC,KAAK,CAAC,+BAA+B,CAAC;IACtC;EACF;EAEA,IAAI;IACF,MAAMC,KAAK,CAACC,IAAI,CAAC,qCAAqC,EAAE;MACtDJ,IAAI,EAAED,OAAO,CAACC,IAAI;MAClBC,IAAI,EAAEF,OAAO,CAACE;IAChB,CAAC,CAAC;IACFI,UAAU,CAAC;MAAEL,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IAClCK,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBL,KAAK,CAAC,uBAAuB,CAAC;EAChC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}