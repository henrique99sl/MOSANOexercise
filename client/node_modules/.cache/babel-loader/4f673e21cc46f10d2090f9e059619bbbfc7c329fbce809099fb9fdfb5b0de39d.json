{"ast":null,"code":"var _jsxFileName = \"/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/context/UsersContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersContext = /*#__PURE__*/createContext();\nconst removeDuplicatesById = usersArray => {\n  const seen = new Set();\n  return usersArray.filter(user => {\n    if (seen.has(user._id)) {\n      return false;\n    }\n    seen.add(user._id);\n    return true;\n  });\n};\n\n// Helper para garantir delay mínimo (ms)\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nexport const UsersProvider = ({\n  children\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      console.log(\"[UsersContext] Fetching users...\");\n      // Executa requisição e delay em paralelo\n      const [res] = await Promise.all([axios.get(\"http://localhost:4000/api/users\"), delay(800) // tempo mínimo do spinner em ms\n      ]);\n      const uniqueUsers = removeDuplicatesById(res.data);\n      setUsers(uniqueUsers);\n      console.log(`[UsersContext] ${uniqueUsers.length} users carregados.`);\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to fetch users:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const addUser = async userData => {\n    setSaving(true);\n    try {\n      console.log(\"[UsersContext] Adding user:\", userData);\n      const res = await axios.post(\"http://localhost:4000/api/users\", userData);\n      console.log(\"[UsersContext] User adicionado:\", res.data);\n      await fetchUsers();\n      return res.data;\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to add user:\", err);\n      return null;\n    } finally {\n      setSaving(false);\n    }\n  };\n  const deleteUser = async id => {\n    try {\n      console.log(\"[UsersContext] Deleting user id:\", id);\n      await axios.delete(`http://localhost:4000/api/users/${id}`);\n      console.log(\"[UsersContext] User apagado:\", id);\n      await fetchUsers();\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to delete user:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: {\n      users,\n      loading,\n      saving,\n      addUser,\n      deleteUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersProvider, \"U4rOx51GnijOTg4EtsKMYCjvfmM=\");\n_c = UsersProvider;\nexport const useUsers = () => {\n  _s2();\n  return useContext(UsersContext);\n};\n_s2(useUsers, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","UsersContext","removeDuplicatesById","usersArray","seen","Set","filter","user","has","_id","add","delay","ms","Promise","resolve","setTimeout","UsersProvider","children","_s","users","setUsers","loading","setLoading","saving","setSaving","fetchUsers","console","log","res","all","get","uniqueUsers","data","length","err","error","addUser","userData","post","deleteUser","id","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUsers","_s2","$RefreshReg$"],"sources":["/Users/henriquedasilvalopes/Desktop/RNchallenge/client/src/context/UsersContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst UsersContext = createContext();\n\nconst removeDuplicatesById = (usersArray) => {\n  const seen = new Set();\n  return usersArray.filter((user) => {\n    if (seen.has(user._id)) {\n      return false;\n    }\n    seen.add(user._id);\n    return true;\n  });\n};\n\n// Helper para garantir delay mínimo (ms)\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const UsersProvider = ({ children }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      console.log(\"[UsersContext] Fetching users...\");\n      // Executa requisição e delay em paralelo\n      const [res] = await Promise.all([\n        axios.get(\"http://localhost:4000/api/users\"),\n        delay(800), // tempo mínimo do spinner em ms\n      ]);\n      const uniqueUsers = removeDuplicatesById(res.data);\n      setUsers(uniqueUsers);\n      console.log(`[UsersContext] ${uniqueUsers.length} users carregados.`);\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to fetch users:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const addUser = async (userData) => {\n    setSaving(true);\n    try {\n      console.log(\"[UsersContext] Adding user:\", userData);\n      const res = await axios.post(\"http://localhost:4000/api/users\", userData);\n      console.log(\"[UsersContext] User adicionado:\", res.data);\n      await fetchUsers();\n      return res.data;\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to add user:\", err);\n      return null;\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const deleteUser = async (id) => {\n    try {\n      console.log(\"[UsersContext] Deleting user id:\", id);\n      await axios.delete(`http://localhost:4000/api/users/${id}`);\n      console.log(\"[UsersContext] User apagado:\", id);\n      await fetchUsers();\n    } catch (err) {\n      console.error(\"[UsersContext] Failed to delete user:\", err);\n    }\n  };\n\n  return (\n    <UsersContext.Provider value={{ users, loading, saving, addUser, deleteUser }}>\n      {children}\n    </UsersContext.Provider>\n  );\n};\n\nexport const useUsers = () => useContext(UsersContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}